
def isDDM(m, n) :
 
 for i in range(0, n) : 
 

 sum = 0
 for j in range(0, n) :
 sum = sum + abs(m[i][j]) 

 
 sum = sum - abs(m[i][i])

 
 if (abs(m[i][i]) < sum) :
 return False
 return True
n = 3
m = [[1,2,-1],
 [3,-1,2],

 [2,-2,6]]
if((isDDM(m, n))) :
 print ("System is diagonally dominant")
else :
 print ("System is NOT diagonally dominant; rearrange the system")
 

f1 = lambda x ,y , z: (1+y-2*z)/3
f2 = lambda x ,y , z: (3-x+z)/2
f3 = lambda x ,y , z: (2-2*x+2*y)/6

x0 , y0 , z0 = 0 ,0 , 0

e = float ( input ('Enter tolerable error : ') )

print ('\t Iteration \t x\t y\t z\n')
for i in range (0 , 25 ):
 x1 = f1 ( x0 , y0 , z0 )
 y1 = f2 ( x1 , y0 , z0 )
 z1 = f3 ( x1 , y1 , z0 )

 print ('%d\t%0.4f\t%0.4f\t%0.4f\n' %(i , x1 , y1 , z1 ) )
 e1 = abs ( x0-x1 ) ;
 e2 = abs ( y0-y1 ) ;
 e3 = abs ( z0-z1 ) ;
 x0 = x1
 y0 = y1
 z0 = z1
if e1>e and e2>e and e3>e:
 continue
else :
 break
print ('\ n Solution : x=%0.3f , y=%0.3f and z = %0.3f\n'% ( x1 , y1 , z1 ) )
